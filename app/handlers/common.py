from aiogram import Dispatcher, types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.dispatcher.filters import Text

from app.orm import session, User




async def cmd_start(message: types.Message, state: FSMContext):
    # –ó–∞–≤–µ—Ä—à–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –¥–∏–∞–ª–æ–≥–∞
    await state.finish()
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    
    buttons = ["‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"]
    
    # –ü—Ä–æ—á–∏—Ç–∞—Ç—å –¥–∞–Ω–Ω—ã–µ —á–∞—Ç–∞ –∏ –Ω–∞–π—Ç–∏ —é–∑–µ—Ä–∞ –≤ –ë–î
    user_meta = message.chat.values
    our_user = session.query(User).filter_by(t_chat_id=user_meta['id']).first()
    
    if our_user:
        buttons.append("üí¨ –ü—Ä–æ—Ñ–∏–ª—å")
        buttons.append("üêæ –ò–≥—Ä–∞—Ç—å")
    else:
        buttons.append("üìù –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è")
    
    # –î–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫–∏
    keyboard.add(*buttons)

    await message.answer(
        f"–ü—Ä–∏–≤–µ—Ç) {message.chat.values['first_name']} ‚úåÔ∏è –Ø –¢–µ—Ä—Ä–∞-–±–æ—Ç üê∫\n–ï—Å–ª–∏ –≤—ã –º–µ–Ω—è –Ω–µ –∑–Ω–∞–µ—Ç–µ, —Ç–æ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ –ø–∏—à–∏—Ç–µ –º–Ω–µ.\n–ù–∞–∂–º–∏ –Ω–∞ –Ω—É–∂–Ω—É—é –∫–Ω–æ–ø–∫—É –º–µ–Ω—é, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É ‚úç",
        reply_markup=keyboard
    )
# -------------------------------- –ü—Ä–æ—Ñ–∏–ª—å -------------------------------- #
async def profile(message: types.Message):
    # –ü—Ä–æ—á–∏—Ç–∞—Ç—å –¥–∞–Ω–Ω—ã–µ —á–∞—Ç–∞ –∏ –Ω–∞–π—Ç–∏ —é–∑–µ—Ä–∞ –≤ –ë–î
    user_meta = message.chat.values
    our_user = session.query(User).filter_by(t_chat_id=user_meta['id']).first()
    
    await message.reply(f'''–í–æ—Ç –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å:\n{our_user}\n----
    ''')
# ---------------------------------------------------------------------------- #
# -------------------------------- –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è -------------------------------- #

async def information(message: types.Message, state: FSMContext):
    await state.finish()
    await message.reply(f'–≠—Ç–æ –∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –ø—Ä–æ–µ–∫—Ç—É. –©–∞ –Ω–∏—á–µ–≥–æ —Ç—É—Ç –Ω–µ—Ç(')
# ---------------------------------------------------------------------------- #
# -------------------------------- –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è ------------------------------- #

async def cmd_registration(message: types.Message):
    user_meta = message.chat.values
    our_user = session.query(User).filter_by(t_chat_id=user_meta['id']).first()
    if our_user:
        await message.reply(f'–Ø —Ç–µ–±—è —É–∂–µ –∑–Ω–∞—é) –¢—ã {user_meta["first_name"]} {user_meta["last_name"]}')
    else:
        new_user = User(
            user_meta['id'],
            user_meta['username'],
            user_meta['first_name'],
            user_meta['last_name'],
        )
        session.add(new_user)
        session.commit()
        await message.reply(f'–û–∫, —Å—á–∏—Ç–∞–π —Ç–µ–±—è –∑–∞—Ä–µ–≥–∞–ª–∞, —Ç—ã —Å –Ω–∞–º–∏!')
# ---------------------------------------------------------------------------- #

async def cmd_cancel(message: types.Message, state: FSMContext):
    await state.finish()
    await message.answer("–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ\n–ù–∞–ø–∏—à–∏ /start, –¥–ª—è –≤—Ö–æ–¥–∞ –≤ –º–µ–Ω—é, –∏–ª–∏ –≤—ã–±–µ—Ä–∏ –æ–ø—Ü–∏–∏ –∏–∑ —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥ ", reply_markup=types.ReplyKeyboardRemove())

def register_handlers_common(dp: Dispatcher):
    dp.register_message_handler(cmd_start, commands="start", state="*")
    dp.register_message_handler(cmd_cancel, commands="cancel", state="*")
    dp.register_message_handler(cmd_cancel, Text(equals="–æ—Ç–º–µ–Ω–∞", ignore_case=True), state="*")
    dp.register_message_handler(profile, Text(equals="üí¨ –ü—Ä–æ—Ñ–∏–ª—å", ignore_case=True), state="*")
    dp.register_message_handler(profile, commands="profile", state="*")
    dp.register_message_handler(information, Text(equals="‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", ignore_case=True), state="*")
    dp.register_message_handler(cmd_registration, Text(equals="üìù –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è", ignore_case=True), state="*")